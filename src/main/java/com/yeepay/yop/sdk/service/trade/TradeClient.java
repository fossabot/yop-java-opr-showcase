/*
 * 标准交易
 * <p>名称（中文）：新交易下单接口<br />名称（英文，xx.war）：opr-hessian.war<br />简介：合单支付下单与标准收款内部下单接口合并<br />wiki文档地址：http://wiki.yeepay.com/pages/viewpage.action?pageId=122095805(4.新api分组相关接口规划)<br />预计项目上线时间：2020年6月9日<br />归属/拟申请的sp编码（可选）：opr<br />期望api分组编码、名称（可选）：trade(标准交易)<br />涉及的接口：申请下单、订单查询、申请退款、退款查询</p>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.yeepay.yop.sdk.service.trade;

import com.yeepay.yop.sdk.exception.YopClientException;
import com.yeepay.yop.sdk.service.trade.request.*;
import com.yeepay.yop.sdk.service.trade.response.*;

public interface TradeClient {

    /**
     * 交易下单
     * 交易下单
     * @return OrderResponse
     * @throws YopClientException if fails to make API call
     */
    OrderResponse order(OrderRequest request) throws YopClientException;

    /**
     * 关闭订单
     * 关闭订单
     * @return OrderCloseResponse
     * @throws YopClientException if fails to make API call
     */
    OrderCloseResponse orderClose(OrderCloseRequest request) throws YopClientException;

    /**
     * 查询订单
     * 查询订单
     * @return OrderQueryResponse
     * @throws YopClientException if fails to make API call
     */
    OrderQueryResponse orderQuery(OrderQueryRequest request) throws YopClientException;

    /**
     * 申请退款
     * &lt;p&gt;* 订单状态为“SUCCESS”时才能发起退款。&lt;/p&gt; &lt;p&gt;* 退款支持单笔交易分多次退款，多次退款需要提交原支付订单的商户订单号和不同的退款单号，总退款金额不能超过用户实际支付金额。&lt;/p&gt; &lt;p&gt;* 一笔退款失败后重新提交，请不要更换退款单号，请使用相同的商户退款请求号请求退款。&lt;/p&gt; * 申请退款接口的响应参数code仅代表业务的受理情况，具体退款是否成功，需要通过申请退款或查询退款接口返回的status获取退款结果。&lt;/br&gt;   &lt;span&gt;（1）当响应参数code&#x3D;OPR00000时,说明易宝已受理该笔退款,此时需要根据status来判断退款状态；&lt;/span&gt;   （2）当响应参数code≠OPR00000时,说明易宝没有受理该笔退款，可根据返回的message进行相应处理。
     * @return RefundResponse
     * @throws YopClientException if fails to make API call
     */
    RefundResponse refund(RefundRequest request) throws YopClientException;

    /**
     * 查询退款
     * &lt;p&gt;提交退款申请后，通过调用该接口查询退款状态&lt;/p&gt;
     * @return RefundQueryResponse
     * @throws YopClientException if fails to make API call
     */
    RefundQueryResponse refundQuery(RefundQueryRequest request) throws YopClientException;


    /**
     * Shuts down this client object, releasing any resources that might be held open. This is an optional method, and
     * callers are not expected to call it, but can if they want to explicitly release any open resources. Once a client
     * has been shutdown, it should not be used to make any more requests.
     */
    void shutdown();
}
